@import 'constants';
@import 'elements';

@import '../app/**/*.scss';

div.history, div.expectation {
  overflow: visible;

  div.meta {
    border-radius: inherit;
    display: flex;
    flex-wrap: wrap;

    div.segment {
      display: inline-flex;
      flex-wrap: wrap;
      margin-bottom: 5px;
    }

    span:not(.truncated, .short), button {
      padding: 7px 15px;
      display: inline-block;
      position: relative;
      background-color: rgba(#fff, .05);
      border-radius: 5px;
      margin-right: 5px;
      margin-top: 0;
      margin-bottom: 0;
      font-size: 14px;
    }

    button {
      min-width: 50px;
      margin-left: 0;

      i {
        float: none;
        margin-right: 0;
      }
    }

    b {
      font-weight: normal;
      position: relative;
      display: inline-block;

      &:after {
        content: '';
        display: inline-block;
        position: relative;
        height: 14px;
        width: 1px;
        background-color: rgba(#fff, .1);
        top: 2px;
        margin-left: 10px;
        margin-right: 5px;
      }
    }

    span {
      span.truncated span.full {
        background-color: lighten($color-dark, 10);
        transition-duration: .1s;
        transform: translateY(10px);
        visibility: hidden;
        opacity: 0;
        color: #fff;
        position: absolute;
        font-size: 12px;
        bottom: 25px;
        margin-bottom: 10px;
        left: 0;
        z-index: +1;
      }

      &:hover span.truncated {
        padding-top: 10px;

        span.full {
          visibility: visible;
          transform: none;
          opacity: 1;
        }
      }
    }

    span.arrow {
      background: transparent;
      color: rgba(#fff, .3);
      padding: 8px 10px;
      padding-left: 12px;
      margin-right: 5px;
    }

    button.activity i {
      &.fa-plug { color: $color-green }
      &.fa-power-off { color: $color-red }
    }

    span.name {
      font-size: 12px;
      b { color: $color-main }
    }

    span.status {
      color: rgba(#fff, .4);
      font-size: 12px;

      b {
        min-width: 35px;
        text-align: center;
        font-size: 14px;
      }

      &.red b { color: $color-red }
      &.green b { color: $color-green }
    }

    span.transport {
      color: rgba(#fff, .4);
      font-size: 12px;
    }

    span.method {
      color: $color-dark;
      font-weight: bold;
    }

    span.path {
      background-color: adjust-hue($color-main, -20);
      color: $color-dark;
    }

    span.time {
      width: 60px;
      text-align: center;
      font-size: 12px;
      padding: 9px 15px;
    }

    span.calls-count, span.name, span.time {
      color: rgba(#fff, .5);

      &.active {
        color: #fff;
      }

      i {
        opacity: .2;
        margin-right: 10px;
      }
    }

    span.calls-count {
      min-width: 38px;
    }

    span.pending {
      min-width: 35px;
      text-align: center;

      i:before { animation: pending 1s infinite }
    }

    span.separator, span.label {
      padding: 0 5px;
      color: rgba(#000, .3);
      font-size: 12px;
      margin-right: 0;
      margin-bottom: 0;
    }
    span.label {
      padding-left: 0;
    }

    span.handled-with {
      background-color: transparent;
      color: rgba(#fff, .3);
      margin-right: 0;
      padding: 7px 5px;

      span.handler-name {
        margin: 0;
        padding: 0;
        background-color: transparent;
        color: $color-main;
      }
      span.handler-name.red {
        color: $color-red;
      }
    }

    span.error { background-color: darken($color-red, 10) }
    span.forward {
      background-color: $color-purple;
      font-size: 12px;
    }

    span.seed {
      color: $color-green;
      font-size: 12px;
    }

    span.cache {
      background-color: lighten($color-purple, 20);
      color: $color-dark;
    }
  }

  &:hover div.meta {
    cursor: pointer;

    span.time, span.transport, span.status, span.name, span.method, span.seed {
      background-color: rgba(#fff, .15);
    }
  }

  &.expectation div.meta {
    span.status b:after {
      display: none;
    }
  }

  @media screen and (max-width: $screen-medium) {
    div.meta {
      background-color: lighten($color-dark, 2);
      padding: 5px;
      padding-bottom: 0;
      margin-bottom: 5px;

      span.arrow:nth-child(1), span.arrow:nth-child(2) { display: none }

      div.segment:first-child {
        width: 100%;

        span:not(.path) { background-color: transparent }
        span.time { padding: 9px 5px; }
      }
    }

    &:hover div.meta {
      background-color: lighten($color-dark, 5);
    }
  }
}
